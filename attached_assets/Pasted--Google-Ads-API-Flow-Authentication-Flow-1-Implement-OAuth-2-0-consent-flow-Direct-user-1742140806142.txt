# Google Ads API Flow

## Authentication Flow

1. Implement OAuth 2.0 consent flow:
   - Direct user to Google OAuth consent screen with your client ID, redirect URI, and required scopes
   - URL: `https://accounts.google.com/o/oauth2/auth`
   - Required scope: `https://www.googleapis.com/auth/adwords`

2. After user consent, receive authorization code at your redirect URI

3. Exchange auth code for tokens:
   - POST to `https://oauth2.googleapis.com/token`
   - Include client ID, client secret, auth code, redirect URI
   - Response contains access token (short-lived) and refresh token (persistent)

4. Store tokens securely - access token expires in ~1hr

5. Use refresh token to get new access tokens when needed:
   - POST to `https://oauth2.googleapis.com/token`
   - Include refresh token, client ID, client secret

## API Call Flow

1. Set up HTTP headers for all requests:
   - `Authorization: Bearer {access_token}`
   - `developer-token: {your_developer_token}`
   - `login-customer-id: {manager_account_id}` (if using MCC)

2. Specify customer ID in API path:
   - Format: `customers/{customer_id}/...`

3. Core API request structure:
   - Endpoint: `https://googleads.googleapis.com/v16/customers/{customer_id}/googleAds:search`
   - Method: POST
   - Content-Type: application/json
   - Body: GAQL query in JSON format

4. Example API call sequence:
   - Get accounts list
   - Pull campaign data
   - Fetch ad performance metrics
   - Modify bids/budgets
   - Create new campaigns/ads

5. Handle rate limits and errors:
   - Implement exponential backoff for 429 responses
   - Parse error responses from `googleads.googleapis.com/v16:searchStream`
   - Use batch requests for efficiency

6. Implement webhook listener for conversion tracking (optional)

## Key Implementation Notes

- All API responses use standard HTTP status codes
- Error responses contain detailed info in JSON format
- Batch operations available for high-volume changes
- Always validate responses and implement proper error handling
- Set up logging of API requests for debugging