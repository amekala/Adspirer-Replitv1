-- Create embedding_type enum type if it doesn't exist
DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'embedding_type') THEN
        CREATE TYPE embedding_type AS ENUM ('campaign', 'ad_group', 'keyword', 'chat_message');
    END IF;
END $$;

-- Create embeddings_store table
CREATE TABLE IF NOT EXISTS "embeddings_store" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "vector" JSONB NOT NULL,
    "text" TEXT NOT NULL,
    "type" embedding_type NOT NULL,
    "source_id" TEXT,
    "metadata" JSONB NOT NULL DEFAULT '{}',
    "created_at" TIMESTAMP NOT NULL DEFAULT now()
);

-- Create chat_embeddings relation table
CREATE TABLE IF NOT EXISTS "chat_embeddings" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "chat_conversation_id" UUID NOT NULL REFERENCES "chat_conversations"("id") ON DELETE CASCADE,
    "embedding_id" UUID NOT NULL REFERENCES "embeddings_store"("id") ON DELETE CASCADE,
    "created_at" TIMESTAMP NOT NULL DEFAULT now(),
    "updated_at" TIMESTAMP NOT NULL DEFAULT now()
);

-- Add indexes for better performance
CREATE INDEX IF NOT EXISTS "embeddings_store_type_idx" ON "embeddings_store" ("type");
CREATE INDEX IF NOT EXISTS "embeddings_store_source_id_idx" ON "embeddings_store" ("source_id");
CREATE INDEX IF NOT EXISTS "chat_embeddings_conversation_id_idx" ON "chat_embeddings" ("chat_conversation_id");

-- Comment on tables
COMMENT ON TABLE "embeddings_store" IS 'Central storage for vector embeddings generated by OpenAI';
COMMENT ON TABLE "chat_embeddings" IS 'Relation between chat conversations and their embeddings';